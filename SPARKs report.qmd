---
title: "Fire deficit product"
format: docx
editor: source
author: Lora Murphy
date: today
output-file: "Fire deficit product"
---

```{r setup, include=FALSE}
library(terra)
library(sf)
library(kableExtra)
library(ggplot2)
library(exactextractr)
library(tidyverse)
library(tidyterra)
library(patchwork)
library(gpkg)
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(messages = FALSE)
knitr::opts_chunk$set(warnings = FALSE)
knitr::opts_chunk$set(results = 'asis')
#\options(knitr.table.format = "latex")
terraOptions(tempdir="D:/workspace/Lora/temp") # Terminator
#terraOptions(tempdir="D:/Lora/temp") # Groot
```

# SPARKs - based on either watershed, county, or L4 ecoregion

We want summary statistics on fire deficit for SPARK watershed regions. To produce these statistics, I used rasterized values of fire deficit where possible, in frequent fire areas. Fire deficit calculations are based on total fires, *including prescribed burns*.

Areas in less-frequent fire areas (FRI > 40) received the value of the ecoregion-level deficit in each pixel. There are different ecoregion-level deficit values for forest, grasslands, and shrublands (see later in this document for details) and the appropriate value was used for each vegetation type. Stats are calculated by aggregating over all the raster pixels in a SPARK, which has the effect of weighting means by area when including the ecoregion-level values.

```{r regions-prep}
#| eval: false

#-----------------------------------------------------------------------------#
# PLEASE NOTE:
# These chunks are now out of order overall. SPARK stuff must be run after the
# raster production later in this document (all marked to eval: false). This
# is rearranged so I can show the latest results first.
#-----------------------------------------------------------------------------#
fri <- terra::rast("../temp_rasters/all_fri_vals.tif")
veg <- terra::rast("../temp_rasters/combined_veg_area.tif")
wui <- terra::rast("../temp_rasters/wui.tif")

#----- Load ecoregions with long-term FRI ------------------------------------#
long_forst_def <- terra::rast("../temp_rasters/eco_forest_def.tif")
long_grass_def <- terra::rast("../temp_rasters/eco_grass_def.tif")
long_shrub_def <- terra::rast("../temp_rasters/eco_shrub_def.tif")

short_def <- terra::rast("../western_us_fire_deficit.tif")


ha_to_acres <- 2.47105

#plot(eco,range=c(-1,10),fill_range=T)
```

```{r do-a-region}
#| eval: false

do_a_region <- function(region_name, region_shape) {
  
  #----- Clip FRI ------------------------------------------------------------#
  fri_crop <- terra::crop(fri     , region_shape)
  fri_crop <- terra::mask(fri_crop, region_shape)
  
  #----- Clip veg ------------------------------------------------------------#
  veg_crop <- terra::crop(veg     , region_shape)
  veg_crop <- terra::mask(veg_crop, region_shape)
  
  #----- Clip WUI ------------------------------------------------------------#
  wui_crop <- terra::crop(wui     , region_shape)
  wui_crop <- terra::mask(wui_crop, region_shape)
  #---------------------------------------------------------------------------#
  
  
  
  #---------------------------------------------------------------------------#
  # Forests.
  # Frequent fire forests FRI 0-20 years
  # Frequent fire forest FRI 20-40
  # Infrequent fire forests (FRI > 40)
  #---------------------------------------------------------------------------#
  
  #----- ID forests by fire frequency ----------------------------------------#
  forest_mask <- terra::ifel(veg_crop == "Forest", 1, NA)
  forest_fri <- terra::mask(fri_crop, forest_mask)
  
  forest_mat <- cbind(c(0,20,40), c(20, 40, 100000), 1:3)
  forest_type <- terra::classify(forest_fri, forest_mat)
  levels(forest_type) <- data.frame(ID = 1:3, 
                                    category = c(
                                      "Frequent fire (FRI < 20)", 
                                      "Frequent fire (FRI 20-40)", 
                                      "Infrequent fire"))
  rm(forest_fri, forest_mask)
  invisible(gc())
  
  
  #----- Make a total fire deficit map, including long deficit ---------------#
  long_crop <- terra::crop(long_forst_def, region_shape)
  long_crop <- terra::mask(long_crop     , region_shape)
  
  short_crop <- terra::crop(short_def , region_shape)
  short_crop <- terra::crop(short_crop, region_shape)
  
  #----- I want to only substitute eco-level deficit where there isn't short -#
  long_crop <- terra::mask(long_crop, short_crop, inverse = T)
  all_def <- terra::subst(long_crop, NA, 0) + terra::subst(short_crop, NA, 0)
  rm(short_crop, long_crop)
  invisible(gc())
  #----- Mask back to FRI, no values if FRI was NA ---------------------------#
  all_def <- terra::mask(all_def, fri_crop)
  all_def <- terra::mask(all_def, forest_type)
  
  #---------------------------------------------------------------------------#
  # Extract table stats
  #---------------------------------------------------------------------------#
  
  #----- Overall area --------------------------------------------------------#
  vv <- values(forest_type)
  tab <- table(vv)
  
  summary_dat <- data.frame(Vegetation = "All forest",
                            Numcells = sum(unlist(tab)))
  
  summary_dat <- rbind(summary_dat,
                       data.frame(Vegetation = levels(forest_type)[[1]]$category,
                            Numcells = as.numeric(unlist(tab))))
  rm(vv, tab)
  invisible(gc())
  
  #----- Area in surplus -----------------------------------------------------#
  surplus <- terra::ifel(all_def > 0, 1, 0)
  
  # Surplus - All forest
  vv <- values(surplus)
  surplus_cells <- sum(vv, na.rm=T)
  rm(vv)
  
  # Surplus - By forest type
  datum <- terra::zonal(surplus, forest_type, fun="sum")
  if (identical(as.character(datum$category), summary_dat$Vegetation[2:4])) {
    summary_dat$Numsurpluscells <- c(surplus_cells, datum$forest_def)
  } else {
    stop("heeeeeelp")
  }
  rm(surplus, datum, surplus_cells)
  invisible(gc())

  #----- Area in deficit -----------------------------------------------------#
  deficit <- terra::ifel(all_def < 0, 1, 0)
  
  # All forest
  vv <- values(deficit)
  deficit_cells <- sum(vv, na.rm=T)
  rm(vv)
  
  # By forest type
  datum <- terra::zonal(deficit, forest_type, fun="sum")
  if (identical(as.character(datum$category), summary_dat$Vegetation[2:4])) {
    summary_dat$Numdeficitcells <- c(deficit_cells, datum$forest_def)
  } else {
    stop("heeeeeelp")
  }
  rm(deficit, datum, deficit_cells)
  invisible(gc())
  
  #----- Mean and sd of deficit ----------------------------------------------#
  
  # All forest
  vv <- values(all_def)
  mean_deficit <- mean(vv, na.rm=T)
  sd_deficit   <- sd  (vv, na.rm=T)
  rm(vv)
  
  datum <- terra::zonal(all_def, forest_type, fun="mean")
  if (identical(as.character(datum$category), summary_dat$Vegetation[2:4])) {
    summary_dat$mean_deficit <- c(mean_deficit, datum$forest_def)
  } else {
    stop("heeeeeelp")
  }
  
  datum <- terra::zonal(all_def, forest_type, fun="sd")
  if (identical(as.character(datum$category), summary_dat$Vegetation[2:4])) {
    summary_dat$sd_deficit <- c(sd_deficit, datum$forest_def)
  } else {
    stop("heeeeeelp")
  }
  
  #---------------------------------------------------------------------------#
  # Forest WUI 
  #---------------------------------------------------------------------------#
  summary_dat <- rbind(summary_dat, 
                       data.frame(Forest = c("Forest WUI", "Forest non-WUI"),
                                  Numcells = 0, Numsurpluscells = 0, 
                                  Numdeficitcells = 0, mean_deficit = 0,
                                  sd_deficit = 0))
  
  #----- Overall forest WUI area ---------------------------------------------#
  datum <- mask(wui_crop, forest_type)
  summary_dat$Numcells[summary_dat$Vegetation == "Forest WUI"] <- sum(!is.na(values(datum)), na.rm=T)
  datum <- mask(forest_type, wui_crop, inverse=T)
  summary_dat$Numcells[summary_dat$Vegetation == "Forest non-WUI"] <- sum(!is.na(values(datum)), na.rm=T)
  rm(datum)
  invisible(gc())
  
  #----- Area in surplus and deficit -----------------------------------------#
  surplus <- terra::ifel(all_def > 0, 1, NA)
  surp <- terra::mask(surplus, wui_crop)
  summary_dat$Numsurpluscells[summary_dat$Vegetation == "Forest WUI"] <- sum(values(surp), na.rm=T)
  surp <- terra::mask(surplus, wui_crop, inverse = T)
  summary_dat$Numsurpluscells[summary_dat$Vegetation == "Forest non-WUI"] <- sum(values(surp), na.rm=T)
  
  rm(surplus, surp)
  invisible(gc())
  
  deficit <- terra::ifel(all_def < 0, 1, NA)
  defr <- terra::mask(deficit, wui_crop)
  summary_dat$Numdeficitcells[summary_dat$Vegetation == "Forest WUI"] <- sum(values(defr), na.rm=T)
  defr <- terra::mask(deficit, wui_crop, inverse = T)
  summary_dat$Numdeficitcells[summary_dat$Vegetation == "Forest non-WUI"] <- sum(values(defr), na.rm=T)
  rm(deficit, defr)
  invisible(gc())
  
  #----- Mean and sd of deficit ----------------------------------------------#
  defr <- terra::mask(all_def, wui_crop)
  summary_dat$mean_deficit[summary_dat$Vegetation == "Forest WUI"] <- mean(values(defr), na.rm=T)
  summary_dat$sd_deficit  [summary_dat$Vegetation == "Forest WUI"] <- sd(values(defr), na.rm=T)
  
  defr <- terra::mask(all_def, wui_crop, inverse=T)
  summary_dat$mean_deficit[summary_dat$Vegetation == "Forest non-WUI"] <- mean(values(defr), na.rm=T)
  summary_dat$sd_deficit  [summary_dat$Vegetation == "Forest non-WUI"] <- sd(values(defr), na.rm=T)
  
  #----- Clean up and get ready to display -----------------------------------#
  summary_dat$Total_area <- 
    ((summary_dat$Numcells * prod(res(forest_type)))/10000) * ha_to_acres
  
  summary_dat$Surplus_area <- 
    ((summary_dat$Numsurpluscells * prod(res(forest_type)))/10000) * ha_to_acres
  
  summary_dat$Deficit_area <- 
    ((summary_dat$Numdeficitcells * prod(res(forest_type)))/10000) * ha_to_acres
  
  summary_dat$Numcells <- NULL
  summary_dat$Numdeficitcells <- NULL
  summary_dat$Numsurpluscells <- NULL
  
  rm(forest_type)
  invisible(gc())
  
  
  
  #---------------------------------------------------------------------------#
  # Grass
  #---------------------------------------------------------------------------#
  grass_mask <- terra::ifel(veg_crop == "Grass", 1, NA)
  #grass_fri  <- terra::mask(fri_crop, grass_mask)
  
  #----- Make a total fire deficit map, including long deficit ---------------#
  long_crop <- terra::crop(long_grass_def, region_shape)
  long_crop <- terra::mask(long_crop     , region_shape)
  
  short_crop <- terra::crop(short_def , region_shape)
  short_crop <- terra::crop(short_crop, region_shape)
  
  #----- I want to only substitute eco-level deficit where there isn't short -#
  long_crop <- terra::mask(long_crop, short_crop, inverse = T)
  all_def <- terra::subst(long_crop, NA, 0) + terra::subst(short_crop, NA, 0)
  rm(short_crop, long_crop)
  invisible(gc())
  #----- Mask back to FRI, no values if FRI was NA ---------------------------#
  all_def <- terra::mask(all_def, fri_crop)
  all_def <- terra::mask(all_def, grass_mask)
  #---------------------------------------------------------------------------#
  
  #----- Extract table stats -------------------------------------------------#
  
  # Overall area
  vv <- values(grass_mask)
  grass_cells <- sum(vv, na.rm=T)
  
  rm(vv)
  invisible(gc())
  
  #----- Area in surplus and deficit -----------------------------------------#
  surplus <- terra::ifel(all_def > 0, 1, 0)
  vv <- values(surplus)
  surplus_cells <- sum(vv, na.rm=T)
  rm(surplus, vv)
  
  deficit <- terra::ifel(all_def < 0, 1, 0)
  vv <- values(deficit)
  deficit_cells <- sum(vv, na.rm=T)
  rm(deficit, vv)
  invisible(gc())
  
  #----- Mean and sd of deficit ----------------------------------------------#
  vv <- values(all_def)
  mean_deficit <- mean(vv, na.rm=T)
  sd_deficit   <- sd  (vv, na.rm=T)
  
  summary_dat <- rbind(summary_dat, data.frame(
    Forest = "Grassland",
    Total_area = ((grass_cells * prod(res(grass_mask)))/10000) * ha_to_acres,
    Surplus_area = ((surplus_cells * prod(res(grass_mask)))/10000) * ha_to_acres,
    Deficit_area = ((deficit_cells * prod(res(grass_mask)))/10000) * ha_to_acres,
    mean_deficit = mean_deficit,
    sd_deficit = sd_deficit
  ))
  
  #---------------------------------------------------------------------------#
  # Grass WUI 
  #---------------------------------------------------------------------------#
  summary_dat <- rbind(summary_dat, 
                       data.frame(Forest = c("Grass WUI", "Grass non-WUI"),
                                  Total_area = 0, Surplus_area = 0, 
                                  Deficit_area = 0, mean_deficit = 0,
                                  sd_deficit = 0))
  
  #----- Overall grass WUI area ---------------------------------------------#
  datum <- mask(grass_mask, wui_crop)
  numcells <- sum(!is.na(values(datum)), na.rm=T)
  summary_dat$Total_area[summary_dat$Vegetation == "Grass WUI"] <- ((numcells * prod(res(grass_mask)))/10000) * ha_to_acres
  datum <- mask(grass_mask, wui_crop, inverse=T)
  numcells <- sum(!is.na(values(datum)), na.rm=T)
  summary_dat$Total_area[summary_dat$Vegetation == "Grass non-WUI"] <- ((numcells * prod(res(grass_mask)))/10000) * ha_to_acres
  rm(datum)
  invisible(gc())
  
  #----- Area in surplus and deficit -----------------------------------------#
  surplus <- terra::ifel(all_def > 0, 1, NA)
  surp <- terra::mask(surplus, wui_crop)
  numcells <- sum(values(surp), na.rm=T)
  summary_dat$Surplus_area[summary_dat$Vegetation == "Grass WUI"] <- ((numcells * prod(res(grass_mask)))/10000) * ha_to_acres
  surp <- terra::mask(surplus, wui_crop, inverse = T)
  numcells <- sum(values(surp), na.rm=T)
  summary_dat$Surplus_area[summary_dat$Vegetation == "Grass non-WUI"] <- ((numcells * prod(res(grass_mask)))/10000) * ha_to_acres
  
  rm(surplus, surp)
  invisible(gc())
  
  deficit <- terra::ifel(all_def < 0, 1, NA)
  defr <- terra::mask(deficit, wui_crop)
  numcells <- sum(values(defr), na.rm=T)
  summary_dat$Deficit_area[summary_dat$Vegetation == "Grass WUI"] <- ((numcells * prod(res(grass_mask)))/10000) * ha_to_acres
  defr <- terra::mask(deficit, wui_crop, inverse = T)
  numcells <- sum(values(defr), na.rm=T)
  summary_dat$Deficit_area[summary_dat$Vegetation == "Grass non-WUI"] <- ((numcells * prod(res(grass_mask)))/10000) * ha_to_acres
  rm(deficit, defr)
  invisible(gc())
  
  #----- Mean and sd of deficit ----------------------------------------------#
  defr <- terra::mask(all_def, wui_crop)
  summary_dat$mean_deficit[summary_dat$Vegetation == "Grass WUI"] <- mean(values(defr), na.rm=T)
  summary_dat$sd_deficit  [summary_dat$Vegetation == "Grass WUI"] <- sd(values(defr), na.rm=T)
  
  defr <- terra::mask(all_def, wui_crop, inverse=T)
  summary_dat$mean_deficit[summary_dat$Vegetation == "Grass non-WUI"] <- mean(values(defr), na.rm=T)
  summary_dat$sd_deficit  [summary_dat$Vegetation == "Grass non-WUI"] <- sd(values(defr), na.rm=T)
  
  rm(grass_mask, vv, all_def)
  invisible(gc())
  #---------------------------------------------------------------------------#
  
  
  
  #---------------------------------------------------------------------------#
  # Shrub
  #---------------------------------------------------------------------------#
  shrub_mask <- terra::ifel(veg_crop == "Shrub", 1, NA)
  
  #----- Make a total fire deficit map, including long deficit ---------------#
  long_crop <- terra::crop(long_shrub_def, region_shape)
  long_crop <- terra::mask(long_crop     , region_shape)
  
  short_crop <- terra::crop(short_def , region_shape)
  short_crop <- terra::crop(short_crop, region_shape)
  
  #----- I want to only substitute eco-level deficit where there isn't short -#
  long_crop <- terra::mask(long_crop, short_crop, inverse = T)
  all_def <- terra::subst(long_crop, NA, 0) + terra::subst(short_crop, NA, 0)
  rm(short_crop, long_crop)
  invisible(gc())
  #----- Mask back to FRI, no values if FRI was NA ---------------------------#
  all_def <- terra::mask(all_def, fri_crop)
  all_def <- terra::mask(all_def, shrub_mask)
  #---------------------------------------------------------------------------#
  
  
  
  #----- Prep a map of shrub deficit -----------------------------------------#
   lims <- range(values(all_def), na.rm = T)
  if (abs(lims[1]/lims[2]) > 1.5 || abs(lims[1]/lims[2]) < 0.75) {
    threshold <- ceiling(min(abs(lims)))
    breaks <- round(c(seq(from=-threshold, to=0, length=3),
                seq(from=0, to = threshold, length=3)[2:3]), 0)
    labels <- c(paste("<", breaks[1]), breaks[2:4], paste(">", breaks[5]))
    deficit_scale <- scale_fill_grass_c(na.value = NA, name="Deficit < 0",
                       limits = c(-threshold, threshold),
                       breaks = breaks,
                       labels = labels,
                       oob = scales::squish) 
  } else {
    deficit_scale <- scale_fill_grass_c(na.value = NA, name="Deficit < 0")
  }
   
  suppressMessages(shrubplot <- ggplot() + 
                     geom_spatraster(data = all_def) +
                     geom_spatvector(data = region_shape, fill=NA) +
                     theme_bw() +
                     blank_axes +
                     #theme(legend.position = "bottom") +
                     ggtitle("Shrub deficit/surplus") +
                     deficit_scale)
  #---------------------------------------------------------------------------#
  
  
  #----- Extract table stats -------------------------------------------------#
  
  # Overall area
  vv <- values(shrub_mask)
  shrub_cells <- sum(vv, na.rm=T)
  
  rm(vv)
  invisible(gc())
  
  #----- Area in surplus and deficit -----------------------------------------#
  surplus <- terra::ifel(all_def > 0, 1, 0)
  vv <- values(surplus)
  surplus_cells <- sum(vv, na.rm=T)
  rm(surplus, vv)
  
  deficit <- terra::ifel(all_def < 0, 1, 0)
  vv <- values(deficit)
  deficit_cells <- sum(vv, na.rm=T)
  rm(deficit, vv)
  invisible(gc())
  
  #----- Mean and sd of deficit ----------------------------------------------#
  vv <- values(all_def)
  mean_deficit <- mean(vv, na.rm=T)
  sd_deficit   <- sd  (vv, na.rm=T)
  
  summary_dat <- rbind(summary_dat, data.frame(
    Forest = "Shrubland",
    Total_area = ((shrub_cells * prod(res(shrub_mask)))/10000) * ha_to_acres,
    Surplus_area = ((surplus_cells * prod(res(shrub_mask)))/10000) * ha_to_acres,
    Deficit_area = ((deficit_cells * prod(res(shrub_mask)))/10000) * ha_to_acres,
    mean_deficit = mean_deficit,
    sd_deficit = sd_deficit
  ))
  
  #---------------------------------------------------------------------------#
  # Shrub WUI 
  #---------------------------------------------------------------------------#
  summary_dat <- rbind(summary_dat, 
                       data.frame(Forest = c("Shrub WUI", "Shrub non-WUI"),
                                  Total_area = 0, Surplus_area = 0, 
                                  Deficit_area = 0, mean_deficit = 0,
                                  sd_deficit = 0))
  
  #----- Overall Shrub WUI area ---------------------------------------------#
  datum <- mask(shrub_mask, wui_crop)
  numcells <- sum(!is.na(values(datum)), na.rm=T)
  summary_dat$Total_area[summary_dat$Vegetation == "Shrub WUI"] <- ((numcells * prod(res(shrub_mask)))/10000) * ha_to_acres
  datum <- mask(shrub_mask, wui_crop, inverse=T)
  numcells <- sum(!is.na(values(datum)), na.rm=T)
  summary_dat$Total_area[summary_dat$Vegetation == "Shrub non-WUI"] <- ((numcells * prod(res(shrub_mask)))/10000) * ha_to_acres
  rm(datum)
  invisible(gc())
  
  #----- Area in surplus and deficit -----------------------------------------#
  surplus <- terra::ifel(all_def > 0, 1, NA)
  surp <- terra::mask(surplus, wui_crop)
  numcells <- sum(values(surp), na.rm=T)
  summary_dat$Surplus_area[summary_dat$Vegetation == "Shrub WUI"] <- ((numcells * prod(res(shrub_mask)))/10000) * ha_to_acres
  surp <- terra::mask(surplus, wui_crop, inverse = T)
  numcells <- sum(values(surp), na.rm=T)
  summary_dat$Surplus_area[summary_dat$Vegetation == "Shrub non-WUI"] <- ((numcells * prod(res(shrub_mask)))/10000) * ha_to_acres
  
  rm(surplus, surp)
  invisible(gc())
  
  deficit <- terra::ifel(all_def < 0, 1, NA)
  defr <- terra::mask(deficit, wui_crop)
  numcells <- sum(values(defr), na.rm=T)
  summary_dat$Deficit_area[summary_dat$Vegetation == "Shrub WUI"] <- ((numcells * prod(res(shrub_mask)))/10000) * ha_to_acres
  defr <- terra::mask(deficit, wui_crop, inverse = T)
  numcells <- sum(values(defr), na.rm=T)
  summary_dat$Deficit_area[summary_dat$Vegetation == "Shrub non-WUI"] <- ((numcells * prod(res(shrub_mask)))/10000) * ha_to_acres
  rm(deficit, defr)
  invisible(gc())
  
  #----- Mean and sd of deficit ----------------------------------------------#
  defr <- terra::mask(all_def, wui_crop)
  summary_dat$mean_deficit[summary_dat$Vegetation == "Shrub WUI"] <- mean(values(defr), na.rm=T)
  summary_dat$sd_deficit  [summary_dat$Vegetation == "Shrub WUI"] <- sd(values(defr), na.rm=T)
  
  defr <- terra::mask(all_def, wui_crop, inverse=T)
  summary_dat$mean_deficit[summary_dat$Vegetation == "Shrub non-WUI"] <- mean(values(defr), na.rm=T)
  summary_dat$sd_deficit  [summary_dat$Vegetation == "Shrub non-WUI"] <- sd(values(defr), na.rm=T)
  
  rm(shrub_mask, vv, all_def, defr)
  invisible(gc())
  #---------------------------------------------------------------------------#
  
  summary_dat$Region <- region_name
  
  return(summary_dat)
}
```

```{r spark-watersheds-regions}
#| eval: true

#----- Load SPARK watersheds -------------------------------------------------#
spark <- terra::vect("../../Spark counties shapefile/spark_watersheds.shp")
spark <- terra::project(spark, fri)


all_sparks <- unique(spark$SPARK)
all_sparks <- all_sparks[-grep("AK -", all_sparks)]
all_sparks <- all_sparks[-grep("BC -", all_sparks)]

summary_table_dat <- NULL

for (spark_name in all_sparks) {
  
  one_spark <- spark[spark$SPARK == spark_name]
  summary_dat <- do_a_region(spark_name, one_spark)
  summary_table_dat <- rbind(summary_table_dat, summary_dat) 
}

write.csv(summary_table_dat, "SPARK stats all spark based on watershed.csv", row.names=F)
rm(all_sparks, summary_dat, summary_table_dat)

# Repeat for each watershed within
summary_table_dat <- NULL

for (i in 1:length(spark)) {
  
  summary_dat <- do_a_region(spark$name[i], spark[i])
  summary_dat$SPARK = spark$SPARK[i]
  summary_table_dat <- rbind(summary_table_dat, summary_dat) 
}

write.csv(summary_table_dat, "SPARK watersheds.csv", row.names=F)

rm(spark, summary_dat, summary_table_dat)
```

```{r spark-counties-regions}
#| eval: true

#----- Load SPARK counties ---------------------------------------------------#
spark_co <- terra::vect("../../Spark counties shapefile/spark_counties.shp")
spark_co <- terra::project(spark_co, fri)

all_sparks <- unique(spark_co$SPARK)
all_sparks <- all_sparks[!is.na(all_sparks)]
all_sparks <- all_sparks[-grep("AK -", all_sparks)]

summary_table_dat <- NULL

for (spark_name in all_sparks) {
  
  one_spark <- spark_co[spark_co$SPARK == spark_name]
  summary_dat <- do_a_region(spark_name, one_spark)
  summary_table_dat <- rbind(summary_table_dat, summary_dat) 
}

write.csv(summary_table_dat, "SPARK stats all spark based on county.csv", row.names=F)
rm(all_sparks, summary_dat, summary_table_dat)

# Repeat for each county within
summary_table_dat <- NULL

for (i in 1:length(spark_co)) {
  
  summary_dat <- do_a_region(spark_co$NAME[i], spark_co[i])
  summary_dat$SPARK = spark_co$SPARK[i]
  summary_table_dat <- rbind(summary_table_dat, summary_dat) 
}

write.csv(summary_table_dat, "SPARK counties.csv", row.names=F)

rm(spark_co, summary_dat, summary_table_dat)
```

```{r spark-ecoregions-regions}
#| eval: true

#----- Load L4 ecoregions for SPARKs -----------------------------------------#
spark_l4 <- terra::vect("../../Spark counties shapefile/spark_l4_ecoregions.shp")
spark_l4 <- terra::project(spark_l4, fri)

summary_table_dat <- NULL

all_eco <- unique(spark_l4$US_L4NAME)
for (spark_name in all_eco) {
  
  one_spark <- spark_co[spark_l4$US_L4NAME == spark_name]
  summary_dat <- do_a_region(spark_name, one_spark)
  summary_table_dat <- rbind(summary_table_dat, summary_dat) 
}

write.csv(summary_table_dat, "SPARK ecoregions.csv", row.names=F)

rm(spark_co, all_sparks)
```



```{r}
#| eval: false

summary_dat <- read.csv("SPARK stats.csv")
#----- Prep and display table ------------------------------------------------#

summary_dat$meansd <- paste(round(summary_dat$mean_deficit, 2), "$\\pm$", 
                            round(summary_dat$sd_deficit, 2))
summary_dat$mean_deficit <- NULL
summary_dat$sd_deficit <- NULL

summary_dat$Total_area <- prettyNum(round(summary_dat$Total_area, 0), 
                                    big.mark = ",")

summary_dat$Surplus_area <- prettyNum(round(summary_dat$Surplus_area, 0), 
                                      big.mark = ",")

summary_dat$Deficit_area <- prettyNum(round(summary_dat$Deficit_area, 0), 
                                      big.mark = ",")



# Can't do this pretty table automagically for a Word doc
#header_indexer <- rep(5, length(unique(summary_dat$SPARK)))
#names(header_indexer) <- unique(summary_dat$SPARK)

#summary_dat$SPARK <- NULL
#kable(summary_dat, booktabs = TRUE,
#      col.names = c("Vegetation type", "Total area (ac)",
#                "Area in surplus", "Area in deficit",
#                "Mean deficit"), 
#  digits = 1) %>% 
#  pack_rows(index = header_indexer)

print(knitr::kable(summary_dat, col.names = c("Vegetation type", "Total area (ac)",
                                              "Area in surplus", "Area in deficit",
                                              "SPARK", "Mean deficit"), digits = 1))
#}

```

```{r make-spark-barplot}
#| eval: false

summary_dat <- read.csv("SPARK stats.csv")

#----- Take out WUI ----------------------------------------------------------#
x <- grep("WUI", summary_dat$Forest)
summary_dat <- summary_dat[-x,]


#one <- summary_dat[summary_dat$Region == 'WA - Klickitat County',]
summary_dat$Region <- as.factor(summary_dat$Region)
ggplot(data = summary_dat, aes(y = Region, x = Total_area, fill = Forest)) +
  geom_bar(stat='identity', orientation = 'y')


#----- A nice graph showing all the regions ----------------------------------#
summary_dat$def_lower <- summary_dat$mean_deficit - summary_dat$sd_deficit
summary_dat$def_upper <- summary_dat$mean_deficit + summary_dat$sd_deficit

# Make short display names for SPARKs
summary_dat$SPARK <- NA
x <- which(summary_dat$Region == "AZ - Coconino County-Flagstaff Region")
summary_dat$SPARK[x] <- "AZ Flagstaff"
x <- which(summary_dat$Region == "CA - Santa Barbara County")
summary_dat$SPARK[x] <- "CA Sta. Barbara"
x <- which(summary_dat$Region == "CA - Tahoe Sierra SPARK")
summary_dat$SPARK[x] <- "CA Tahoe"
x <- which(summary_dat$Region == "CO - Gunnison County and Watersheds")
summary_dat$SPARK[x] <- "CO Gunnison Co"
x <- which(summary_dat$Region == "WA - Klickitat County")
summary_dat$SPARK[x] <- "WA Klickitat Co"
x <- which(summary_dat$Region == "WY - Upper Colorado Basin, Green River")
summary_dat$SPARK[x] <- "WY Colorado/Green"

#----- A plot with no restriction on Y axis ----------------------------------#
suppressMessages(region_plot <- 
  ggplot(summary_dat, aes(x = SPARK, y = mean_deficit, color = Forest)) +
  geom_point(position = position_dodge(width = 0.5), size = 3) +
  geom_linerange(
    aes(ymin = def_lower, ymax = def_upper),
    position = position_dodge(width = 0.5)#,
    #width = 0.2
  ) +
  geom_hline(yintercept = 0) +
  labs(
    title = "Mean+sd deficit by SPARK (negative values = deficit)",
    x = "",
    y = "Fire deficit (bars show sd)",
    color = NULL
    #caption = "Two shrubs omitted for readability"
  ) +
  theme_minimal() +
  theme(legend.position = "bottom"))
ggsave("figs/spark_summary_unzoomed.png", region_plot, width=8.25)

#----- A plot zoomed in, to show more central points -------------------------#
xmin = -10
xmax = 5
summary_dat$def_lower2 <- pmax(summary_dat$def_lower, xmin)
summary_dat$def_upper2 <- pmin(summary_dat$def_upper, xmax)
suppressMessages(region_plot <- 
  ggplot(summary_dat, aes(x = SPARK, y = mean_deficit, color = Forest)) +
  geom_point(position = position_dodge(width = 0.5), size = 3) +
  geom_linerange(
    aes(ymin = def_lower2, ymax = def_upper2),
    position = position_dodge(width = 0.5)#,
    #width = 0.2
  ) +
  geom_hline(yintercept = 0) +
  ylim(c(xmin, xmax)) +
  labs(
    title = "Zoomed in: mean+sd deficit by SPARK (negative values = deficit)",
    x = "",
    y = "Fire deficit (bars show sd)",
    color = NULL,
    caption = "Zoomed in for readability, some points omitted"
  ) +
  theme_minimal() +
  theme(legend.position = "bottom"))
ggsave("figs/spark_summary.png", region_plot, width=8.25)
```